import { useEffect, useRef } from 'react';
import { setViewBox } from '../utils';

export const useSettingCanvas = () => {
    const originPointerPosition = useRef(null)

    useEffect(() => {
        const svg = d3.select('#canvas')
    
        svg.attr('preserveAspectRatio', 'xMidYMid meet')
            .attr('viewBox', '0, 0, 1000, 1000')
            .style('width', '100%')
            .style('height', '100%')
            .style('background-color', '#FFFFFF')
    
        const background = svg.append('rect')
            .attr('x', -1000)
            .attr('y', -1000)
            .attr('width', 4000)
            .attr('height', 4000)
            .attr('fill', '#CDCDCD')
            .style('cursor', 'grab')
    
        const dragHandler = d3.drag()
            .on('start', () => {
                const { x, y } = d3.event
                originPointerPosition.current = { x, y }
            })
            .on('drag', () => {
                const { x, y } = d3.event
                const viewBox = svg.node().viewBox.baseVal
        
                if (originPointerPosition) {
                    setViewBox(svg, background, {
                        x: viewBox.x + originPointerPosition.current.x - x,
                        y: viewBox.y + originPointerPosition.current.y - y
                    })
                }
            })
        
        dragHandler(background)
    }, [])
}

export const useSettingBackspaceEvent = (callback) => {
    useEffect(() => {
        const body = d3.select('body')
        body.on('keydown', () => {
            if (d3.event.code === 'Backspace') { callback() }
        })
    }, [])
}
