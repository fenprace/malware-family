import React, { useState, useEffect } from 'react';
import TreeGraph from '../tree.js'
import TreeMapGraph from '../treemap.js'

const computeSourceData = (samples) => {
    const sourceData = [{ name: 'root', fullName: 'root', parent: '' }];
    
    samples = samples.filter(d => d.Family !== 'BaiXiang I')

    for (let i in samples) {
        const sample = samples[i]
        const [n0, n1, n2, n3] = sample.Name.split('.')

        if (!sourceData.find(d => d.fullName === n0)) {
            sourceData.push({ name: n0, fullName: n0, parent: 'root' });
        }

        if (!sourceData.find(d => d.fullName === `${n0}.${n1}`)) {
            sourceData.push({ name: n1, fullName: `${n0}.${n1}`, parent: n0 });
        }

        if (!sourceData.find(d => d.fullName === `${n0}.${n1}.${n2}`)) {
            sourceData.push({ name: n2, fullName: `${n0}.${n1}.${n2}`, parent: `${n0}.${n1}` });
        }

        sourceData.push({ name: n3, fullName: `${n0}.${n1}.${n2}.${n3}`, parent: `${n0}.${n1}.${n2}` })
    }

    return sourceData
}

const Canvas = (props) => {
    const { graphType } = props

    const [sourceData, setSourceData] = useState(null)

    useEffect(() => {
        d3.csv('./MalwareFamilies.csv').then(samples => {
            setSourceData(computeSourceData(samples))
        });    
    }, [])

    useEffect(() => {
        if (sourceData) {
            const svg = d3.select('#canvas')
            const tree = new TreeGraph(svg, sourceData)
            const treeMap = new TreeMapGraph(svg, sourceData)
            tree.draw()

            svg.selectAll('*').remove()

            if (graphType === 'tree') {
                tree.draw()
            } else if (graphType === 'treemap') {
                treeMap.draw()
            }  
        }
    }, [graphType, sourceData])

    return <svg id="canvas"></svg>
}

export default Canvas