import TreeGraph from './tree.js'
import TreeMapGraph from './treemap.js'

const sourceData = [
    { name: 'root', parent: '' },
    { name: 'Backdoor.ASP.Ace.a', parent: 'root' },
    { name: 'Backdoor.ASP.Ace.ac', parent: 'Backdoor.ASP.Ace.a' },
    { name: 'Backdoor.ASP.Ace.af', parent: 'Backdoor.ASP.Ace.a' },
    { name: 'Backdoor.ASP.Ace.ag', parent: 'Backdoor.ASP.Ace.a' },
    { name: 'Backdoor.ASP.Ace.ai', parent: 'Backdoor.ASP.Ace.ac' },
    { name: 'Backdoor.ASP.Ace.ar', parent: 'Backdoor.ASP.Ace.a' },
    { name: 'Backdoor.ASP.Ace.aw', parent: 'Backdoor.ASP.Ace.ai' },
    { name: 'Backdoor.ASP.Ace.bf', parent: 'Backdoor.ASP.Ace.ai' },
    { name: 'Backdoor.ASP.Ace.bf', parent: 'root' },
    { name: 'Backdoor.ASP.Ace.br', parent: 'root' },
]

const svg = d3.select('#canvas')
const tree = new TreeGraph(svg, sourceData)
const treeMap = new TreeMapGraph(svg, sourceData)
tree.draw()

const typeSelector = d3.select('select[name=type]')
typeSelector.node().onchange = e => {
    svg.selectAll('*').remove()

    if (e.target.value === 'tree') {
        tree.draw()
    } else if (e.target.value === 'treemap') {
        treeMap.draw()
    }
}
